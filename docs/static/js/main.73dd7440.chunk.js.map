{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","key.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categ","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","categoria","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,mCACI,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAMd,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,uDCFJ,mCDEI,cAEkDC,UAAUH,GAF5D,sBAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAACC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDEAPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIhC,OAFAc,QAAQC,IAAIL,GAGR,mCACI,sBAAKM,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,UCJPS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECHX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAwBtC,OAjBAC,qBAAU,WAEN1B,EAAQC,GACH0B,MAAK,SAAAC,GAEFC,YAAW,WACPJ,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAEf,UAIX,CAACtB,IAGGuB,EDnByBM,CAAa7B,GAAhCa,EAFsB,EAE5BN,KAAce,EAFc,EAEdA,QAGrB,OACI,qCACI,oBAAIJ,UAAW,oCAAf,SACKlB,IAGJsB,GAAW,mBAAGJ,UAAW,mCAAd,yBAEZ,qBAAKA,UAAU,YAAf,SAEQL,EAAOJ,KAAI,SAACC,GACR,OAAO,cAAC,EAAD,eACEA,GADiBA,EAAIC,aEMvCmB,EAxBM,WAAO,IAAD,EAEa5C,mBAAS,CAAC,cAFvB,mBAEhB6C,EAFgB,KAEJ9C,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ8C,EAAWtB,KAAI,SAAAuB,GACX,OAAO,cAAC,EAAD,CAEHhC,SAAUgC,GADLA,Y,MCZjCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.73dd7440.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [InputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); // elimina la accion de accion por defecto de un input\r\n        if (InputValue.trim().length > 2){\r\n            setCategories(categ => [InputValue, ...categ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                type=\"text\"\r\n                value={InputValue}\r\n                onChange={handleInputChange}\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}","import { key } from \"../key\";\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${key}&q=${encodeURI(category)}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","export const key = 'S11pdoJNlcdN0yJUbN471qtj6f58U45I';","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n    console.log(title)\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card animate__animated animate__fadeIn\">\r\n                <img src={url} alt={title}></img>\r\n                <p>{title}</p>\r\n            </div>\r\n        </>\r\n    )   \r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className= \"animate__animated animate__fadeIn\">\r\n                {category}\r\n            </h3>\r\n\r\n            {loading && <p className= \"animate__animated animate__flash\">Loading ...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((img) => {\r\n                        return(<GifGridItem key= {img.id} \r\n                            { ...img } /> // se puede enviar datos de esta maanera tmb\r\n                        )\r\n                        })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setTimeout(()=>{\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false,\r\n                    })\r\n                },3000)\r\n\r\n            })\r\n\r\n    }, [category]) // se ejecueta cuando el componente es renderifazo por primera vez\r\n    // si la dependencia category cambia, se vuelve a ejecutar el useEffect\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories= {setCategories}/>\r\n            <hr />\r\n            \r\n            <ul>\r\n                {\r\n                    categories.map(categoria => {\r\n                        return <GifGrid \r\n                            key={categoria}\r\n                            category={categoria}\r\n                        /> ;\r\n                    })\r\n                }\r\n            </ul>\r\n        </>    \r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}